{"ast":null,"code":"var _jsxFileName = \"/Users/hungyie/Downloads/Axium-Technical-Interview/frontend/src/components/ChatMessage.tsx\";\nimport React from 'react';\n\n// 定义一条消息的数据结构\n\n// ChatMessage 组件需要接收的属性 (props)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// 单条聊天消息组件\nconst ChatMessage = ({\n  message,\n  isLatest = false\n}) => {\n  // 格式化时间戳 (转成 “HH:MM” 格式的本地时间)\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // 判断消息是否来自用户 (决定UI对齐 & 样式)\n  const isUser = message.role === 'user';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message-fade-in ${isLatest ? 'mb-4' : 'mb-6'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex ${isUser ? 'justify-end' : 'justify-start'} mb-3`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-xs lg:max-w-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded-lg px-4 py-2 shadow-sm ${isUser ? 'bg-primary-500 text-white' // 用户消息 → 蓝色背景，白字\n          : 'bg-gray-100 text-gray-800' // 助手消息 → 灰色背景，黑字\n          }`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm leading-relaxed whitespace-pre-wrap\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex ${isUser ? 'justify-end' : 'justify-between'} items-center mt-1`,\n          children: [!isUser && message.model_used && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-500\",\n            children: message.model_used\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-500\",\n            children: formatTimestamp(message.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = ChatMessage;\nexport default ChatMessage;\nvar _c;\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatMessage","message","isLatest","formatTimestamp","timestamp","date","Date","toLocaleTimeString","hour","minute","isUser","role","className","children","content","fileName","_jsxFileName","lineNumber","columnNumber","model_used","_c","$RefreshReg$"],"sources":["/Users/hungyie/Downloads/Axium-Technical-Interview/frontend/src/components/ChatMessage.tsx"],"sourcesContent":["import React from 'react';\n\n// 定义一条消息的数据结构\ninterface Message {\n  id: number;                        // 唯一ID (时间戳或UUID)\n  role: 'user' | 'assistant';        // 消息发送方 (用户 / AI 助手)\n  content: string;                   // 消息内容\n  timestamp: string;                 // 消息时间 (ISO 格式)\n  model_used?: string;               // (可选) 使用的模型名称 (仅AI回复时存在)\n}\n\n// ChatMessage 组件需要接收的属性 (props)\ninterface ChatMessageProps {\n  message: Message;                  // 要展示的那条消息\n  isLatest?: boolean;                // 是否是最后一条消息 (用于额外样式/动画)\n}\n\n// 单条聊天消息组件\nconst ChatMessage: React.FC<ChatMessageProps> = ({ message, isLatest = false }) => {\n  // 格式化时间戳 (转成 “HH:MM” 格式的本地时间)\n  const formatTimestamp = (timestamp: string) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  // 判断消息是否来自用户 (决定UI对齐 & 样式)\n  const isUser = message.role === 'user';\n\n  return (\n    <div className={`message-fade-in ${isLatest ? 'mb-4' : 'mb-6'}`}>\n      {/* 外层容器：根据角色决定消息在左边还是右边 */}\n      <div className={`flex ${isUser ? 'justify-end' : 'justify-start'} mb-3`}>\n        <div className=\"max-w-xs lg:max-w-md\">\n          {/* 消息气泡 */}\n          <div\n            className={`rounded-lg px-4 py-2 shadow-sm ${\n              isUser\n                ? 'bg-primary-500 text-white'   // 用户消息 → 蓝色背景，白字\n                : 'bg-gray-100 text-gray-800'   // 助手消息 → 灰色背景，黑字\n            }`}\n          >\n            {/* 消息内容 */}\n            <p className=\"text-sm leading-relaxed whitespace-pre-wrap\">\n              {message.content}\n            </p>\n          </div>\n\n          {/* 时间戳 & 模型信息 (只在助手回复时显示模型) */}\n          <div\n            className={`flex ${\n              isUser ? 'justify-end' : 'justify-between'\n            } items-center mt-1`}\n          >\n            {/* 如果是助手消息并且有 model_used，就显示模型名 */}\n            {!isUser && message.model_used && (\n              <span className=\"text-xs text-gray-500\">\n                {message.model_used}\n              </span>\n            )}\n            {/* 时间戳 (始终显示) */}\n            <span className=\"text-xs text-gray-500\">\n              {formatTimestamp(message.timestamp)}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatMessage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AASA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ,GAAG;AAAM,CAAC,KAAK;EACjF;EACA,MAAMC,eAAe,GAAIC,SAAiB,IAAK;IAC7C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IAChC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;EAC5E,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGT,OAAO,CAACU,IAAI,KAAK,MAAM;EAEtC,oBACEZ,OAAA;IAAKa,SAAS,EAAE,mBAAmBV,QAAQ,GAAG,MAAM,GAAG,MAAM,EAAG;IAAAW,QAAA,eAE9Dd,OAAA;MAAKa,SAAS,EAAE,QAAQF,MAAM,GAAG,aAAa,GAAG,eAAe,OAAQ;MAAAG,QAAA,eACtEd,OAAA;QAAKa,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBAEnCd,OAAA;UACEa,SAAS,EAAE,kCACTF,MAAM,GACF,2BAA2B,CAAG;UAAA,EAC9B,2BAA2B,CAAG;UAAA,EACjC;UAAAG,QAAA,eAGHd,OAAA;YAAGa,SAAS,EAAC,6CAA6C;YAAAC,QAAA,EACvDZ,OAAO,CAACa;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAGNnB,OAAA;UACEa,SAAS,EAAE,QACTF,MAAM,GAAG,aAAa,GAAG,iBAAiB,oBACvB;UAAAG,QAAA,GAGpB,CAACH,MAAM,IAAIT,OAAO,CAACkB,UAAU,iBAC5BpB,OAAA;YAAMa,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EACpCZ,OAAO,CAACkB;UAAU;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CACP,eAEDnB,OAAA;YAAMa,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EACpCV,eAAe,CAACF,OAAO,CAACG,SAAS;UAAC;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAlDIpB,WAAuC;AAoD7C,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}