{"ast":null,"code":"var _jsxFileName = \"/Users/hungyie/Downloads/llm-practice/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport ChatPage from './pages/ChatPage';\nimport AboutPage from './pages/AboutPage';\n\n/**\n * App 组件 - 应用程序根组件\n * \n * 功能：\n * - 配置 React Router 路由\n * - Layout 组件提供统一的页面布局和导航\n * - 各个页面组件专注于自己的功能实现\n * - 保持设计一致性和代码模块化\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // -----------------------\n  // 全局状态 (Global State)\n  // -----------------------\n  const [messages, setMessages] = React.useState([]);\n  // 聊天记录：用户和助手的所有消息\n\n  const [isLoading, setIsLoading] = React.useState(false); // 是否正在等待AI回复 (控制输入框禁用、显示TypingIndicator)\n  const [models, setModels] = React.useState([]); // 可用的模型列表 (下拉框)\n  const [apiStatus, setApiStatus] = React.useState(null); // API健康状态 (健康/降级/错误)\n  const [error, setError] = React.useState(null); // 错误提示 (顶部红色banner)\n  const [isInitialized, setIsInitialized] = React.useState(false); // 应用是否初始化完毕 (加载模型+状态)\n\n  const messagesEndRef = React.useRef(null); // 用来标记消息列表底部的DOM节点 (用于自动滚动)\n\n  // -----------------------\n  // 滚动逻辑 (Side Effect)\n  // -----------------------\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // 每当 messages 或 isLoading 改变时，自动滚动到最底部\n  React.useEffect(() => {\n    scrollToBottom();\n  }, [messages, isLoading]);\n\n  // -----------------------\n  // 初始化逻辑 (App init)\n  // -----------------------\n  React.useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        setError(null);\n\n        // 并行请求：加载模型列表 & API状态\n        const [modelsResponse, statusResponse] = await Promise.all([ApiService.getModels(), ApiService.getStatus()]);\n        setModels(modelsResponse.models);\n        setApiStatus(statusResponse);\n        setIsInitialized(true); // 初始化完成\n      } catch (error) {\n        console.error('Failed to initialize app:', error);\n        setError(error.message || 'Failed to connect to the API');\n        setIsInitialized(true); // 即使失败也标记初始化完成，避免一直loading\n      }\n    };\n    initializeApp();\n  }, []);\n\n  // -----------------------\n  // 发送消息逻辑\n  // -----------------------\n  const handleSendMessage = async request => {\n    if (isLoading) return; // 防止重复点击\n\n    setIsLoading(true);\n    setError(null);\n\n    // 1) 立即添加用户消息 (optimistic UI)\n    const userMessage = {\n      id: Date.now(),\n      role: 'user',\n      content: request.message,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      // 2) 调用API，等待AI回复\n      const response = await ApiService.sendChatMessage(request);\n\n      // 3) 添加助手的回复\n      const assistantMessage = {\n        id: Date.now() + 1,\n        role: 'assistant',\n        content: response.response,\n        timestamp: response.timestamp,\n        model_used: response.model_used\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      setError(error.message || 'Failed to send message');\n    } finally {\n      setIsLoading(false); // 请求完成\n    }\n  };\n\n  // 清空聊天记录\n  const clearChat = () => {\n    setMessages([]);\n    setError(null);\n  };\n\n  // 刷新API状态\n  const refreshStatus = async () => {\n    try {\n      const status = await ApiService.getStatus();\n      setApiStatus(status);\n    } catch (error) {\n      console.error('Failed to refresh status:', error);\n    }\n  };\n\n  // -----------------------\n  // 初始化加载界面 (Loading screen)\n  // -----------------------\n  if (!isInitialized) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8 border-4 border-primary-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Initializing LLM Practice App...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n  // -----------------------\n  // 主界面渲染\n  // -----------------------\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ChatPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(AboutPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(ChatPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cWjm1STPXoS86my/6He238lZOQM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Layout","ChatPage","AboutPage","jsxDEV","_jsxDEV","App","_s","messages","setMessages","useState","isLoading","setIsLoading","models","setModels","apiStatus","setApiStatus","error","setError","isInitialized","setIsInitialized","messagesEndRef","useRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","useEffect","initializeApp","modelsResponse","statusResponse","Promise","all","ApiService","getModels","getStatus","console","message","handleSendMessage","request","userMessage","id","Date","now","role","content","timestamp","toISOString","prev","response","sendChatMessage","assistantMessage","model_used","clearChat","refreshStatus","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/hungyie/Downloads/llm-practice/frontend/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport ChatPage from './pages/ChatPage';\nimport AboutPage from './pages/AboutPage';\n\n/**\n * App 组件 - 应用程序根组件\n * \n * 功能：\n * - 配置 React Router 路由\n * - Layout 组件提供统一的页面布局和导航\n * - 各个页面组件专注于自己的功能实现\n * - 保持设计一致性和代码模块化\n */\nfunction App() {\n  // -----------------------\n  // 全局状态 (Global State)\n  // -----------------------\n  const [messages, setMessages] = React.useState<Array<{id: number, role: 'user' | 'assistant', content: string, timestamp: string, model_used?: string}>>([]); \n  // 聊天记录：用户和助手的所有消息\n\n  const [isLoading, setIsLoading] = React.useState(false); // 是否正在等待AI回复 (控制输入框禁用、显示TypingIndicator)\n  const [models, setModels] = React.useState<ModelInfo[]>([]); // 可用的模型列表 (下拉框)\n  const [apiStatus, setApiStatus] = React.useState<ApiStatus | null>(null); // API健康状态 (健康/降级/错误)\n  const [error, setError] = React.useState<string | null>(null); // 错误提示 (顶部红色banner)\n  const [isInitialized, setIsInitialized] = React.useState(false); // 应用是否初始化完毕 (加载模型+状态)\n\n  const messagesEndRef = React.useRef<HTMLDivElement>(null); // 用来标记消息列表底部的DOM节点 (用于自动滚动)\n\n  // -----------------------\n  // 滚动逻辑 (Side Effect)\n  // -----------------------\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  // 每当 messages 或 isLoading 改变时，自动滚动到最底部\n  React.useEffect(() => {\n    scrollToBottom();\n  }, [messages, isLoading]);\n\n  // -----------------------\n  // 初始化逻辑 (App init)\n  // -----------------------\n  React.useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        setError(null);\n        \n        // 并行请求：加载模型列表 & API状态\n        const [modelsResponse, statusResponse] = await Promise.all([\n          ApiService.getModels(),\n          ApiService.getStatus()\n        ]);\n\n        setModels(modelsResponse.models);\n        setApiStatus(statusResponse);\n        setIsInitialized(true); // 初始化完成\n      } catch (error: any) {\n        console.error('Failed to initialize app:', error);\n        setError(error.message || 'Failed to connect to the API');\n        setIsInitialized(true); // 即使失败也标记初始化完成，避免一直loading\n      }\n    };\n\n    initializeApp();\n  }, []);\n\n  // -----------------------\n  // 发送消息逻辑\n  // -----------------------\n  const handleSendMessage = async (request: ChatRequest) => {\n    if (isLoading) return; // 防止重复点击\n\n    setIsLoading(true);\n    setError(null);\n\n    // 1) 立即添加用户消息 (optimistic UI)\n    const userMessage = {\n      id: Date.now(),\n      role: 'user' as const,\n      content: request.message,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n\n    try {\n      // 2) 调用API，等待AI回复\n      const response = await ApiService.sendChatMessage(request);\n      \n      // 3) 添加助手的回复\n      const assistantMessage = {\n        id: Date.now() + 1,\n        role: 'assistant' as const,\n        content: response.response,\n        timestamp: response.timestamp,\n        model_used: response.model_used\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n\n    } catch (error: any) {\n      console.error('Failed to send message:', error);\n      setError(error.message || 'Failed to send message');\n    } finally {\n      setIsLoading(false); // 请求完成\n    }\n  };\n\n  // 清空聊天记录\n  const clearChat = () => {\n    setMessages([]);\n    setError(null);\n  };\n\n  // 刷新API状态\n  const refreshStatus = async () => {\n    try {\n      const status = await ApiService.getStatus();\n      setApiStatus(status);\n    } catch (error: any) {\n      console.error('Failed to refresh status:', error);\n    }\n  };\n\n  // -----------------------\n  // 初始化加载界面 (Loading screen)\n  // -----------------------\n  if (!isInitialized) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-4 border-primary-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Initializing LLM Practice App...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // -----------------------\n  // 主界面渲染\n  // -----------------------\n  return (\n    <Router>\n      <Layout>\n        <Routes>\n          {/* 聊天页面 - 默认首页 */}\n          <Route path=\"/\" element={<ChatPage />} />\n          \n          {/* 关于页面 */}\n          <Route path=\"/about\" element={<AboutPage />} />\n          \n          {/* 404 页面 - 重定向到首页 */}\n          <Route path=\"*\" element={<ChatPage />} />\n        </Routes>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}